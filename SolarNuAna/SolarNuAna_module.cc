////////////////////////////////////////////////////////////////////////
// Class:       SolarNuAna
// Module Type: analyzer
// File:        SolarNuAna_module.cc
//
// Generated at Fri Feb  3 15:56:41 2023 by Marco Dias using artmod
// from cetpkgsupport v1_14_01.
////////////////////////////////////////////////////////////////////////

#include "art/Framework/Core/EDAnalyzer.h"
#include "art/Framework/Core/ModuleMacros.h"
#include "art/Framework/Principal/Event.h"
#include "art/Framework/Principal/Handle.h"
#include "art/Framework/Principal/Run.h"
#include "art/Framework/Principal/SubRun.h"
#include "canvas/Utilities/InputTag.h"
#include "fhiclcpp/ParameterSet.h"
#include "messagefacility/MessageLogger/MessageLogger.h"


//class SolarNuAna;

namespace test{ 
class SolarNuAna : public art::EDAnalyzer {
public:
  explicit SolarNuAna(fhicl::ParameterSet const & p);
  // The destructor generated by the compiler is fine for classes
  // without bare pointers or other resource use.

  // Plugins should not be copied or assigned.
  SolarNuAna(SolarNuAna const &) = delete;
  SolarNuAna(SolarNuAna &&) = delete;
  SolarNuAna & operator = (SolarNuAna const &) = delete;
  SolarNuAna & operator = (SolarNuAna &&) = delete;

  // Required functions.
  void analyze(art::Event const & e) override;


private:

  // Declare member data here.

};


SolarNuAna::SolarNuAna(fhicl::ParameterSet const & p)
  :
  EDAnalyzer(p)  // ,
 // More initializers here.
{}

void SolarNuAna::analyze(art::Event const & e)
{
  // Implementation of required member function here.
  std::cout<<"My module on event #"<< e.id().event()<<std::endl;
}
}//test namespace
DEFINE_ART_MODULE(test::SolarNuAna)
